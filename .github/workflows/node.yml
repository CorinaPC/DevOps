name: Exploradores DevOps - CI  # Nome da pipeline que aparecerá no GitHub Actions

on:
  push:
    branches: [ "main" ]        # Executa a pipeline quando houver push na branch main
  pull_request:
    branches: [ "main" ]        # Executa a pipeline quando houver pull request para a branch main

jobs:
  build:
    name: 🚀 Build e Teste      # Nome do job
    runs-on: ubuntu-latest      # Define que o job será executado em uma VM Ubuntu mais recente

    steps:
      - name: 🔄 Checkout do repositório
        uses: actions/checkout@v4  # Faz o checkout do código do repositório para a VM

      - name: 📂 Listar arquivos no repositório
        run: ls -la                # Lista todos os arquivos e pastas do repositório

      - name: 📁 Verificar estrutura mínima do projeto
        run: |                     # Verifica se os diretórios .github e .github/workflows existem
          for dir in ".github" ".github/workflows" ; do
            if [ ! -d "$dir" ]; then
              echo "❌ Diretório obrigatório '$dir' está faltando!"
              exit 1               # Se faltar algum diretório, falha a pipeline
            fi
          done
          echo "✅ Estrutura mínima verificada"

      - name: 📄 Verificar markdown (README.md)
        uses: nosborn/github-action-markdown-cli@v3  # Usa uma ação para verificar a sintaxe do README.md
        with:
          files: README.md

      - name: 🧹 Verificar e remover arquivos desnecessários
        run: |                     # Procura por arquivos indesejados (.log, .DS_Store)
          echo "Verificando arquivos indesejados..."
          if find . -type f \( -name "*.log" -o -name ".DS_Store" \) -print -quit | grep -q .; then
            echo "Arquivos indesejados encontrados! Finalizando com falha."
            exit 1                 # Se encontrar, falha a pipeline
          else
            echo "Nenhum arquivo indesejado encontrado."
          fi

      - name: ✅ CI Finalizado com sucesso
        run: echo "Pipeline finalizado com sucesso 🎉"  # Mensagem final de sucesso